{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STKIZITOSAVETSS\\\\eprms\\\\nicole\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { authAPI } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await authAPI.login(username, password);\n      setUser(data.user);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      return data;\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      await authAPI.logout();\n      setUser(null);\n      localStorage.removeItem('user');\n    } catch (err) {\n      setError(err.message || 'Logout failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","JSON","parse","login","username","password","data","setItem","stringify","err","message","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/STKIZITOSAVETSS/eprms/nicole/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { authAPI } from '../api/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await authAPI.login(username, password);\n      setUser(data.user);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      return data;\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setLoading(true);\n      await authAPI.logout();\n      setUser(null);\n      localStorage.removeItem('user');\n    } catch (err) {\n      setError(err.message || 'Logout failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        login,\n        logout,\n        isAuthenticated: !!user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdL,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACjC;IACAH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACFV,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMS,IAAI,GAAG,MAAMrB,OAAO,CAACkB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MACpDZ,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;MAClBO,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,IAAI,CAACd,IAAI,CAAC,CAAC;MACvD,OAAOc,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACC,OAAO,IAAI,cAAc,CAAC;MACvC,MAAMD,GAAG;IACX,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACFhB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMV,OAAO,CAAC0B,MAAM,CAAC,CAAC;MACtBlB,OAAO,CAAC,IAAI,CAAC;MACbM,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACC,OAAO,IAAI,eAAe,CAAC;MACxC,MAAMD,GAAG;IACX,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACyB,QAAQ;IACnBC,KAAK,EAAE;MACLtB,IAAI;MACJE,OAAO;MACPE,KAAK;MACLO,KAAK;MACLQ,MAAM;MACNI,eAAe,EAAE,CAAC,CAACvB;IACrB,CAAE;IAAAF,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CA1DWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA4DzB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}